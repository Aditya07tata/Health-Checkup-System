import {
  Button,
  Card,
  CardContent,
  Checkbox,
  FormControlLabel,
  TextField,
  Typography,
} from "@mui/material";
import React, { useState } from "react";

const LoginForm = () => {
  //   const [userID, setUserID] = useState("");
  //   const [password, setPassword] = useState("");
  //   const [captchaText, setCaptchaText] = useState("");
  //   const [captchaInput, setCaptchaInput] = useState("");
  //   const [acceptTerms, setAcceptTerms] = useState(false);
  //   const [captchaError, setCaptchaError] = useState(false);
  //   const [userIdError, setUserIdError] = useState(false);
  //   const [passwordError, setPasswordError] = useState(false);

  // generating random captcha text
  // const generateCaptcha = () => {
  //   const charecters =
  //     "QWERTYUIOPASDFGHJKLZXCVBNMqwertyuioplkjhgfdsazxcvbnm0123456789@#$%&";
  //   let result = "";
  //   for (let i = 0; i < 6; i++) {
  //     result += charecters.charAt(
  //       Math.floor(Math.random() * charecters.length)
  //     );
  //   }
  //   setCaptchaText(result);
  // };

  // const handleLogin = (e) => {};
  // e.preventDefault();

  //   // Validate username
  //   if (!userID.trim()) {
  //     setUserIdError(true);
  //     return;
  //   }

  //   // Validate password
  //   if (!password.trim()) {
  //     setPasswordError(true);
  //     return;
  //   }

  //   // Validate CAPTCHA
  //   if (captchaInput.toLowerCase() !== captchaText.toLowerCase()) {
  //     setCaptchaError(true);
  //     return;
  //   }

  //   // Perform login logic here
  //   console.log("User ID:", userID);
  //   console.log("Password:", password);

  //   // Reset the form fields and errors
  //   setUserID("");
  //   setPassword("");
  //   setCaptchaInput("");
  //   setUserIdError(false);
  //   setPasswordError(false);
  //   setCaptchaError(false);
  // };

  return (
    <Card variant="outlined">
      <CardContent>
        <Typography variant="h5" component="div" gutterBottom>
          Login
        </Typography>
        <form>
          <TextField
            label="User ID"
            variant="outlined"
            fullWidth
            margin="normal"
            value={userID}
            onChange={(e) => userIdError(e.target.value)}
            error={userIdError}
            helperText={userIdError ? "User ID is required" : ""}
          />
          <TextField
            label="Password"
            type="password"
            variant="outlined"
            fullWidth
            margin="normal"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            error={passwordError}
            helperText={passwordError ? "Password is required" : ""}
          />
          <TextField
            label="Enter CAPTCHA"
            variant="outlined"
            fullWidth
            margin="normal"
            value={captchaInput}
            onChange={(e) => setCaptchaInput(e.target.value)}
            error={captchaError}
            helperText={
              captchaError ? "Incorrect CAPTCHA. Please try again." : ""
            }
          />
          <div
            style={{
              display: "flex",
              alignItems: "center",
              marginBottom: "10px",
            }}
          >
            <Typography variant="body2" style={{ marginRight: "10px" }}>
              {captchaText}
            </Typography>
            <Button variant="outlined" onClick={generateCaptcha}>
              Refresh CAPTCHA
            </Button>
          </div>
          <FormControlLabel
            control={
              <Checkbox
                checked={acceptTerms}
                onChange={(e) => setAcceptTerms(e.target.checked)}
              />
            }
            label="I accept the terms and conditions"
          />
          <Button
            type="submit"
            variant="contained"
            color="primary"
            fullWidth
            disabled={!acceptTerms || !captchaText}
          >
            Log In
          </Button>
        </form>
      </CardContent>
    </Card>
  );
};

export default LoginForm;
